from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb
import requests

router = Router()

class Registration(StatesGroup):
    id = State()

class PhotoCreate(StatesGroup):
    photos = State()

@router.message(CommandStart())
async def start(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è\n–≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –æ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É! üåÜ‚ú®\n"
                         f"–¢—ã ‚Äî —Ç—É—Ä–∏—Å—Ç –∏–ª–∏ –º–µ—Å—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å? –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –º—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –≥–æ—Ä–æ–¥ –∑–∞–Ω–æ–≤–æ\n"
                         f"–∏–ª–∏ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ! üö∂‚Äç‚ôÇÔ∏èüö∂‚Äç‚ôÄÔ∏è", reply_markup=kb.start)


@router.callback_query(F.data == "On_the_way")
async def On_the_way(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(id=callback.from_user.id)
    data = await state.get_data()
    await callback.message.answer(f"–û—Ç–ª–∏—á–Ω–æ!üåü –ß–µ–º –≤–∞–º –ø–æ–º–æ—á—å?\n"
                                   f"–•–æ—Ç–∏—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏,\n"
                                   f"–≤–∫—É—Å–Ω–æ –ø–æ–µ—Å—Ç—å üçΩÔ∏è –∏–ª–∏ —Å—Ö–æ–¥–∏—Ç—å –≤ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä üõçÔ∏è?\n"
                                   f"–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ:", reply_markup=kb.apply_info)
    await state.clear()

@router.callback_query(F.data == "create")
async def create(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(PhotoCreate.photos)
    await callback.message.answer("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.\n\nüì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:")

@router.message(PhotoCreate.photos, F.photo)
async def photo_import(message: Message, state: FSMContext):
    await state.update_data(photos=message.photo[-1].file_id)
    photo_id = await state.get_data()
    await message.answer_photo(photo=photo_id["photos"], caption=f"–≠—Ç–æ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?", reply_markup=kb.apply_info)
    await state.clear()

@router.callback_query(F.data == "apply")
async def create(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(PhotoCreate.photos)
    await callback.message.answer("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.\n\nüì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:")


