from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
import profile.keyboards as kb
import json
from db import create_pool
from gpt import answer

pool = None

router = Router()

class PreferencesForm(StatesGroup):
    cuisine = State()
    interests = State()
    user_id = State()
    username = State()

class PreferencesFormEdit(StatesGroup):
    cuisine_edit = State()
    interests_edit = State()
    user_id_edit = State()

class RateForm(StatesGroup):
    place = State()
    rating = State()

class SearchForm(StatesGroup):
    query = State()

@router.message(CommandStart())
async def start(message: Message, state: FSMContext):
    global pool
    pool = await create_pool()
    async with pool.acquire() as connection:
        exists = await connection.fetchrow("SELECT * FROM users WHERE user_id = $1", message.from_user.id)
        if exists:
            preferences = await connection.fetchrow("SELECT preferences FROM users WHERE user_id = $1;", message.from_user.id)
            preferences = json.loads(preferences['preferences'])
            cuisine_out = ", ".join([i.title() for i in preferences["cuisine"]])
            interests_out = ", ".join([i.title() for i in preferences["interests"]])
            await message.reply(
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! üòä\n"
                f"–í–æ—Ç —Ç–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
                f"üéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ: {cuisine_out}\n"
                f"üåü –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º: {interests_out}\n\n"
                f"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –∏—Ö, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /edit."
            )
        else:
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç, @{message.from_user.username}! üëã\n"
                             f"–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –≥–∏–¥ –±–æ—Ç–µ –ø–æ –†–æ—Å—Ç–æ–≤—É-–Ω–∞-–î–æ–Ω—É! üåÜ‚ú®\n"
                             f"–î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è. –ö–∞–∫–∏–µ —Ç–∏–ø—ã –∫—É—Ö–Ω–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è? üçΩÔ∏è\n"
                             f"(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.)")
            await state.set_state(PreferencesForm.cuisine)

@router.message(PreferencesForm.cuisine)
async def process_cuisine(message: Message, state: FSMContext):
    cuisine = message.text
    await state.update_data(cuisine=cuisine)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! üéâ –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç, –µ–¥–∞ –∏ —Ç.–¥.) üåü")
    await state.set_state(PreferencesForm.interests)

@router.message(PreferencesForm.interests)
async def process_interests(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥! –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ü§î")
    interests = message.text
    data = await state.get_data()
    promo_cuisine = "–¢—ã ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ö–æ–Ω—å, –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –∂–µ, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω 1 –∑–∞–ø—Ä–æ—Å, —Ç–æ –µ–≥–æ, –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª—å–Ω—ã–º –≤–∏–¥–∞–º –∫—É—Ö–æ–Ω—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Ä–æ–¥–æ–≤. –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ö–∏—Ç–∞–π—Å–∫–∞—è, –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –†—É—Å—Å–∫–∞—è, –ò—Å–ø–∞–Ω—Å–∫–∞—è –∏ —Ç.–¥.). –¢—ã –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–≤–¥—ë–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–ª—å–∑—è! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫—É—Ö–Ω–∏ –∏–ª–∏ –≤–≤—ë–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–∏–¥, —Ç—ã –¥–æ–ª–∂–µ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—ë, —É–∫–∞–∑–∞–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ—Å–≤—è–∑–Ω—ã–π –∏–ª–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å —Ç–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–∏—à–∏ \"NoneObject\", –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ NoneObject –∏ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, –∞ —Ç–∞–∫ –∂–µ –ø–∏—à–∏ NoneObject, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–µ –ø–æ–¥ 1 –∏–∑ —Ç–∏–ø–æ–≤. –í –æ—Ç–≤–µ—Ç –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ—á–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ!!! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏ –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!!!!!!!"
    cuisine = answer(data["cuisine"], promo_cuisine)
    cuisine_mass = cuisine.split(",")
    cuisine_out = ", ".join([i.title() for i in cuisine_mass])
    promo_interests = "–¢—ã ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏–ª–∏ –∂–µ, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω 1 –∑–∞–ø—Ä–æ—Å, —Ç–æ –µ–≥–æ, –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–æ—Ä—Ç, –º—É–∑—ã–∫–∞, –∫–∏–Ω–æ, –∫–Ω–∏–≥–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –µ–¥–∞ –∏ —Ç.–¥.). –¢—ã –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–≤–¥—ë–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–ª—å–∑—è! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∏–ª–∏ –≤–≤—ë–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–∏–¥, —Ç—ã –¥–æ–ª–∂–µ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—ë, —É–∫–∞–∑–∞–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ—Å–≤—è–∑–Ω—ã–π –∏–ª–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å —Ç–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–∏—à–∏ \"NoneObject\", –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ NoneObject –∏ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, –∞ —Ç–∞–∫ –∂–µ –ø–∏—à–∏ NoneObject, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–µ –ø–æ–¥ 1 –∏–∑ —Ç–∏–ø–æ–≤. –í –æ—Ç–≤–µ—Ç –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ—á–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ!!! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏ –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!!!!!!!"
    interests = answer(interests, promo_interests)
    if str(cuisine) == "NoneObject":
        await message.answer("–û—à–∏–±–∫–∞! –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!\n"
                             "–í–≤–µ–¥–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—Å—è –≤–∞–º –∫—É—Ö–Ω–∏.\n"
                             "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –∫–∏—Ç–∞–π—Å–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.) üçΩÔ∏è")
        await state.set_state(PreferencesForm.cuisine)
    elif str(interests) == "NoneObject":
        await message.answer("–û—à–∏–±–∫–∞! –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!\n"
                             "–í–≤–µ–¥–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—Å—è –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å—ã.\n"
                             "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç, –µ–¥–∞ –∏ —Ç.–¥.) Ô∏è")
        await state.set_state(PreferencesForm.interests)
    else:
        interests_mass = interests.split(",")
        await state.update_data(interests=interests)
        user_id = message.from_user.id
        username = message.from_user.username
        await state.update_data(user_id=user_id)
        await state.update_data(username=username)
        interests_out = ", ".join([i.title() for i in interests_mass])
        await message.answer(f"üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:\n\n"
                f"üéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ: {cuisine_out}\n"
                f"üåü –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º: {interests_out}\n"
                f"–í—Å—ë –≤–µ—Ä–Ω–æ? ü§î", reply_markup=kb.apply_right)

@router.message(Command("edit"))
async def edit_profile(message: Message):
    pool = await create_pool()
    async with pool.acquire() as connection:
        exists = await connection.fetchrow("SELECT * FROM users WHERE user_id = $1", message.from_user.id)
        if exists:
            preferences = await connection.fetchrow("SELECT preferences FROM users WHERE user_id = $1;", message.from_user.id)
            preferences = json.loads(preferences['preferences'])
            cuisine_out = ", ".join([i.title() for i in preferences["cuisine"].split(",")])
            interests_out = ", ".join([i.title() for i in preferences["interests"].split(",")])
            await message.reply(
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! üòä\n"
                f"–í–æ—Ç —Ç–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
                f"üéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ: {cuisine_out}\n"
                f"üåü –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º: {interests_out}\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:", reply_markup=kb.edit_profile)
        else:
            await message.answer("‚ö†Ô∏è –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.\n"
                                 "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")

@router.callback_query(F.data == "edit_profile_food_preferences")
async def edit_profile_food_preferences(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer("üçΩÔ∏è –î–∞–≤–∞–π –∏–∑–º–µ–Ω–∏–º —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ! –ù–∞–ø–∏—à–∏, –∫–∞–∫–∏–µ —Ç–∏–ø—ã –∫—É—Ö–Ω–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.).")
    await state.set_state(PreferencesFormEdit.cuisine_edit)

@router.message(PreferencesFormEdit.cuisine_edit)
async def edit_profile_process_cuisine(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥! –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ü§î")
    cuisine = message.text
    promo_cuisine = "–¢—ã ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ö–æ–Ω—å, –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –∂–µ, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω 1 –∑–∞–ø—Ä–æ—Å, —Ç–æ –µ–≥–æ, –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª—å–Ω—ã–º –≤–∏–¥–∞–º –∫—É—Ö–æ–Ω—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Ä–æ–¥–æ–≤. –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ö–∏—Ç–∞–π—Å–∫–∞—è, –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –†—É—Å—Å–∫–∞—è, –ò—Å–ø–∞–Ω—Å–∫–∞—è –∏ —Ç.–¥.). –¢—ã –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–≤–¥—ë–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–ª—å–∑—è! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫—É—Ö–Ω–∏ –∏–ª–∏ –≤–≤—ë–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–∏–¥, —Ç—ã –¥–æ–ª–∂–µ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—ë, —É–∫–∞–∑–∞–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ—Å–≤—è–∑–Ω—ã–π –∏–ª–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å —Ç–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–∏—à–∏ \"NoneObject\", –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ NoneObject –∏ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, –∞ —Ç–∞–∫ –∂–µ –ø–∏—à–∏ NoneObject, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–µ –ø–æ–¥ 1 –∏–∑ —Ç–∏–ø–æ–≤. –í –æ—Ç–≤–µ—Ç –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ—á–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ!!! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏ –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!!!!!!!"
    cuisine = answer(cuisine, promo_cuisine)
    if str(cuisine) == "NoneObject":
        await message.answer("–û—à–∏–±–∫–∞! –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!\n"
                             "–í–≤–µ–¥–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—Å—è –≤–∞–º –∫—É—Ö–Ω–∏.\n"
                             "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –∫–∏—Ç–∞–π—Å–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.) üçΩÔ∏è")
        await state.set_state(PreferencesFormEdit.cuisine_edit)
    else:
        cuisine_mass = cuisine.split(",")
        cuisine_out = ", ".join([i.title() for i in cuisine_mass])
        await state.update_data(cuisine_edit=cuisine)
        await state.update_data(user_id_edit=message.from_user.id)
        await message.answer("–£—Å–ø–µ—à–Ω–æ! üéâ\n"
                         f"–¢–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {cuisine_out}", reply_markup=kb.edit_profile_process_cuisine)

@router.callback_query(F.data == "edit_profile_process_cuisine_apply")
async def edit_profile_cuisine_preferences(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    pool = await create_pool()
    async with pool.acquire() as connection:
        preferences = await connection.fetchrow("SELECT preferences FROM users WHERE user_id = $1;", data["user_id_edit"])
        preferences = json.loads(preferences['preferences'])
        interests = preferences["interests"]
        preferences = {
            "cuisine": data["cuisine_edit"],
            "interests": interests
        }
        await connection.execute("UPDATE users SET preferences = $1 WHERE user_id = $2", json.dumps(preferences), data["user_id_edit"])
    await callback.message.answer("‚úÖ –í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /profile, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.")
    await state.clear()

@router.callback_query(F.data == "edit_profile_interest_preferences")
async def edit_profile_interest_preferences(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer("üéØ –î–∞–≤–∞–π –∏–∑–º–µ–Ω–∏–º —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º! –ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç, –µ–¥–∞ –∏ —Ç.–¥.).")
    await state.set_state(PreferencesFormEdit.interests_edit)

@router.message(PreferencesFormEdit.interests_edit)
async def edit_profile_process_interests(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥! –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ü§î")
    interests = message.text
    promo_interests = "–¢—ã ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏–ª–∏ –∂–µ, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω 1 –∑–∞–ø—Ä–æ—Å, —Ç–æ –µ–≥–æ, –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–æ—Ä—Ç, –º—É–∑—ã–∫–∞, –∫–∏–Ω–æ, –∫–Ω–∏–≥–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –µ–¥–∞ –∏ —Ç.–¥.). –¢—ã –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–≤–¥—ë–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–ª—å–∑—è! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∏–ª–∏ –≤–≤—ë–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–∏–¥, —Ç—ã –¥–æ–ª–∂–µ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—ë, —É–∫–∞–∑–∞–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ—Å–≤—è–∑–Ω—ã–π –∏–ª–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å —Ç–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–∏—à–∏ \"NoneObject\", –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ NoneObject –∏ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, –∞ —Ç–∞–∫ –∂–µ –ø–∏—à–∏ NoneObject, –µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–µ –ø–æ–¥ 1 –∏–∑ —Ç–∏–ø–æ–≤. –í –æ—Ç–≤–µ—Ç –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ—á–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ!!! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏ –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!!!!!!!"
    interests = answer(interests, promo_interests)
    if str(interests) == "NoneObject":
        await message.answer("–û—à–∏–±–∫–∞! –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!\n"
                             "–í–≤–µ–¥–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—Å—è –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å—ã.\n"
                             "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç, –µ–¥–∞ –∏ —Ç.–¥.) Ô∏è")
        await state.set_state(PreferencesFormEdit.interests_edit)
    else:
        interests_mass = interests.split(",")
        interests_out = ", ".join([i.title() for i in interests_mass])
        await state.update_data(interests_edit=interests)
        await state.update_data(user_id_edit=message.from_user.id)
        await message.answer("–£—Å–ø–µ—à–Ω–æ! üéâ\n"
                         f"–¢–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {interests_out}", reply_markup=kb.edit_profile_process_interests)

@router.callback_query(F.data == "edit_profile_process_interests_apply")
async def edit_profile_interest_preferences(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    pool = await create_pool()
    async with pool.acquire() as connection:
        preferences = await connection.fetchrow("SELECT preferences FROM users WHERE user_id = $1;", data["user_id_edit"])
        preferences = json.loads(preferences['preferences'])
        cuisine = preferences["cuisine"]
        preferences = {
            "cuisine": cuisine,
            "interests": data["interests_edit"]
        }
        await connection.execute("UPDATE users SET preferences = $1 WHERE user_id = $2", json.dumps(preferences), data["user_id_edit"])
    await callback.message.answer("‚úÖ –í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /profile, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.")
    await state.clear()

@router.callback_query(F.data == "edit_profile_cancel")
async def edit_profile_cancel(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /edit.")

@router.callback_query(F.data == "yes_apply_right")
async def yes(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    preferences = {
        "cuisine": data["cuisine"],
        "interests": data["interests"]
    }
    async with pool.acquire() as connection:
        exists = await connection.fetchrow("SELECT * FROM users WHERE user_id = $1", data["user_id"])
        if not exists:
            await connection.execute("INSERT INTO users (user_id, username, preferences) VALUES ($1, $2, $3)", data["user_id"], data["username"], json.dumps(preferences))
            await callback.message.answer("–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", reply_markup=kb.start)
            await state.clear()
        else:
            await callback.message.answer("–í—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –∞–∫–∫–∞—É–Ω—Ç!")
            await state.clear()

@router.message(Command("profile"))
async def profile(message: Message):
    pool = await create_pool()
    async with pool.acquire() as connection:
        exists = await connection.fetchrow("SELECT * FROM users WHERE user_id = $1", message.from_user.id)
        if exists:
            preferences = await connection.fetchrow("SELECT preferences FROM users WHERE user_id = $1;", message.from_user.id)
            preferences = json.loads(preferences['preferences'])
            cuisine = preferences["cuisine"]
            interests = preferences["interests"]
            cuisine_out = ", ".join([i.title() for i in cuisine.split(",")])
            interests_out = ", ".join([i.title() for i in interests.split(",")])
            await message.reply("üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
                        f"üçΩÔ∏è –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ:\n"
                        f"{cuisine_out}\n"
                        f"üéØ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º:\n"
                        f"{interests_out}\n\n"
                        f"üîÑ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit.")
        else:
            await message.answer("‚ö†Ô∏è –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.\n"
                                 "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")

@router.callback_query(F.data == "no_apply_right")
async def no(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(PreferencesForm.cuisine)
    await  callback.message.answer("–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! –î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ. –ö–∞–∫–∏–µ —Ç–∏–ø—ã –∫—É—Ö–Ω–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è? üçΩÔ∏è\n"
                                   "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.)")
